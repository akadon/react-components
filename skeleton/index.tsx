import type { NextPage } from 'next'
import Skeleton from './skell'
import useSWRInfinite from 'swr/infinite';
import axios from 'axios'
import Head from 'next/head'


export const fetcher = ((url: any) =>
  axios.get(url)
    .then((res: any) => res.data
    )
);


export const usePaginateposts = (urladr: string, PAGE_LIMIT: number = 20) => {
  const { data, error, isValidating, mutate, size, setSize } = useSWRInfinite(
    (index) => `${urladr}?_page=${index + 1}&_limit=${PAGE_LIMIT}`,
    fetcher
  );

  return {
    data: data ? [].concat(...data) : [],
    loading: (!data && !error) || (size > 0 && data && typeof data[size - 1] === 'undefined'),
    error: error,
    size: size,
    setSize: setSize,
    isEmpty: (data?.[0]?.length === 0),
    ReachingEnd: (data?.[0]?.length === 0) || (data && data[data.length - 1]?.length < PAGE_LIMIT)
  }
};

const Home: NextPage = () => {
  const { data: posts, error: isError, loading: isLoadingMore, size, setSize, ReachingEnd: isReachingEnd } = usePaginateposts('https://jsonplaceholder.typicode.com/posts');

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <link rel="preload" href="https://jsonplaceholder.typicode.com/posts" as="fetch"></link>
        <link rel="preload" href="http://localhost:4000/user" as="fetch"></link>
      </Head>

      {isLoadingMore ?
        <>
          <div>
            <p className="font-medium">
              <Skeleton count={2} />
            </p>
            <p><Skeleton count={5} /></p>
          </div>
        </>
        :
        <>
          {posts.map((post: any) => (
            <div key={post}>
              <p className="font-medium">
                {post.id}.{post.title}
              </p>
              <p>{post.body}</p>
            </div>
          ))}
        </>
      }
      <button disabled={isLoadingMore || isReachingEnd} onClick={() => setSize(size + 1)} >
        {isLoadingMore ? 'Loading...' : (isReachingEnd ? 'No more posts' : 'Load more')}
      </button>
    </>
  )
}

export default Home
